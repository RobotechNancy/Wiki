{
    "hidden": "false",
    "title": "Utiliser la librairie",
    "description": "Comment utiliser la librairie XBee sur une Raspberry Pi",
    "order": "2",
    "uri": "Communication/XBee/Librairie",
    "page_content": "<p>La librairie XBee est utilisable uniquement sur Linux, pour l'installer :</p>\n<ul>\n<li>Cl\u00f4ner le d\u00e9p\u00f4t GitHub : <code>git clone https://github.com/RobotechNancy/Communication.git</code></li>\n<li>Se placer dans le dossier clon\u00e9 : <code>cd Communication</code></li>\n<li>Utiliser le script d'installation : <code>sudo ./lib_manager install Logs XBee</code></li>\n</ul>\n<blockquote>\n<p class=\"quote quote-TIP\">Pour mettre \u00e0 jour la librairie, <code>git pull</code> puis <code>sudo ./lib_manager install XBee</code></p>\n</blockquote>\n<h3>Initialisation</h3>\n<p>Pour initialiser un module XBee, il faut cr\u00e9er une instance de la classe <code>XBee</code> :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"c1\">// Adresses 8 bits (0x00 \u00e0 0xFF) ou macro XB_ADDR_&lt;...&gt;</span>\n<span class=\"n\">XBee</span><span class=\"w\"> </span><span class=\"nf\">xbee</span><span class=\"p\">(</span><span class=\"n\">XB_ADDR_ROBOT_01</span><span class=\"p\">);</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s\">&quot;/dev/ttyAMA0&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">9600</span><span class=\"p\">);</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Une erreur s&#39;est produite lors de l&#39;ouverture du port s\u00e9rie</span>\n<span class=\"w\">    </span><span class=\"c1\">// Toutes les erreurs sont d\u00e9finies dans define_xbee.h</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>En fonction d'o\u00f9 est utilis\u00e9 la librairie, le port s\u00e9rie peut \u00eatre diff\u00e9rent.\nPar exemple, sur une Raspberry Pi, c'est g\u00e9n\u00e9ralement <code>/dev/ttyAMA0</code> alors que sur PC c'est g\u00e9n\u00e9ralement un des ports USB (ex. <code>/dev/ttyUSB0</code>).</p>\n<p>Si une mauvaise configuration est \u00e0 l'origine d'une erreur d'initialisation, vous pouvez utiliser <a href=\"https://www.digi.com/products/embedded-systems/digi-xbee/digi-xbee-tools/xctu\">XCTU</a> pour la corriger. La librairie utilise les param\u00e8tres par d\u00e9fauts d'un module XBee.</p>\n<blockquote>\n<p class=\"quote quote-TIP\">Si vous utiliser l'adaptateur USB, il est possible de r\u00e9initialiser la configuration en appuyant sur le bouton reset.</p>\n</blockquote>\n<h3>Envoyer des donn\u00e9es</h3>\n<p>Pour envoyer des donn\u00e9es, il suffit d'utiliser la fonction <code>XBee::send</code>:</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"c1\">// On envoie un octet avec le code fonction TEST_ALIVE \u00e0 la cam\u00e9ra 01</span>\n<span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">XB_ADDR_CAMERA_01</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_FCT_TEST_ALIVE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"mh\">0x01</span><span class=\"p\">});</span>\n\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">uint8_t</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"mh\">0x01</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x02</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x03</span><span class=\"p\">};</span>\n<span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">XB_ADDR_CAMERA_02</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_FCT_TEST_ALIVE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p>Il est possible d'envoyer jusqu'\u00e0 243 octets de donn\u00e9es, la fonction retourne un code d'erreur le cas ech\u00e9ant.</p>\n<h3>Recevoir des donn\u00e9es</h3>\n<p>Il existe deux moyens de recevoir des donn\u00e9es :</p>\n<ul>\n<li>De mani\u00e8re synchrone (bloque le programme) avec <code>XBee::send</code> :</li>\n</ul>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"c1\">// On veut r\u00e9cup\u00e9rer toutes les positions</span>\n<span class=\"c1\">// avec un d\u00e9lai maximal de 5 secondes</span>\n<span class=\"n\">xbee_result_t</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">XB_ADDR_01</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_FCT_GET_ARUCO_POS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{},</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">);</span>\n\n<span class=\"k\">switch</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">.</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"no\">XB_E_SUCCESS</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"c1\">// Trame disponible avec res.frame</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;Positions re\u00e7ues !&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"no\">XB_E_FRAME_TIMEOUT</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;Aucune r\u00e9ponse re\u00e7ue en 5 secondes&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">default</span><span class=\"o\">:</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;Une erreur est survenue :(&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<ul>\n<li>De mani\u00e8re asynchrone (non bloquant) avec <code>XBee::bind</code> :</li>\n</ul>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">onTestAlive</span><span class=\"p\">(</span><span class=\"n\">XBee</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">xbee</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">xbee_frame_t</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">frame</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;Code fonction TEST_ALIVE re\u00e7u&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">.</span><span class=\"n\">emitterAddress</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_FCT_TEST_ALIVE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"n\">XB_FCT_TEST_ALIVE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">onTestAlive</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p>Dans les deux cas, il faut utiliser <code>XBee::startListening</code> pour pouvoir recevoir des donn\u00e9es, par exemple :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;robotech/xbee.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">XBee</span><span class=\"w\"> </span><span class=\"n\">xbee</span><span class=\"p\">(</span><span class=\"n\">XB_ADDR_ROBOT_01</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s\">&quot;/dev/ttyUSB0&quot;</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">XB_E_SUCCESS</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Utilisation d&#39;un lambda au lieu d&#39;une fonction classique</span>\n<span class=\"w\">    </span><span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"n\">XB_FCT_TEST_ALIVE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[](</span><span class=\"n\">XBee</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">xbee</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">xbee_frame_t</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">frame</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;Code fonction TEST_ALIVE re\u00e7u&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">.</span><span class=\"n\">emitterAddress</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_FCT_TEST_ALIVE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// On bloque le thread principal pour laisser le </span>\n<span class=\"w\">    </span><span class=\"c1\">// temps au programme de recevoir des meesages</span>\n<span class=\"w\">    </span><span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">startListening</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">this_thread</span><span class=\"o\">::</span><span class=\"n\">sleep_for</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">seconds</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">));</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>"
}