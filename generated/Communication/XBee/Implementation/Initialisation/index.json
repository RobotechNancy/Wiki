{
    "hidden": "false",
    "title": "Initialisation",
    "description": "Impl\u00e9mentation de l'initialisation des modules XBee",
    "order": "2",
    "uri": "Communication/XBee/Implementation/Initialisation",
    "page_content": "<p>Toute l'initialisation se fait dans <code>XBee::open</code> qui ouvre le port s\u00e9rie et appelle <code>XBee::checkATConfig</code> pour v\u00e9rifier la configuration du module :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"n\">XBee</span><span class=\"w\"> </span><span class=\"nf\">xbee</span><span class=\"p\">(</span><span class=\"n\">XB_ADDR_ROBOT_01</span><span class=\"p\">);</span><span class=\"w\"> </span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">xbee</span><span class=\"p\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s\">&quot;/dev/ttyAMA0&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">XB_E_SUCCESS</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Code d&#39;erreur dans define_xbee.h</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3>Choix de l'adresse</h3>\n<p>Toutes les adresses sont sur un octet (0 \u00e0 255), d\u00e9finies dans <code>define_xbee.h</code> et purement arbitraires:</p>\n<ul>\n<li><code>XB_ADDR_ROBOT_01</code> : <code>0x01</code>, adresse du gros robot</li>\n<li><code>XB_ADDR_ROBOT_02</code> : <code>0x02</code>, adresse du petit robot</li>\n<li><code>XB_ADDR_CAMERA_01</code> : <code>0x03</code>, premi\u00e8re adresse pour une cam\u00e9ra</li>\n<li><code>XB_ADDR_CAMERA_02</code> : <code>0x04</code>, deuxi\u00e8me adresse pour une cam\u00e9ra</li>\n</ul>\n<h3>Choix du port s\u00e9rie</h3>\n<p>Le choix du port s\u00e9rie d\u00e9pend du PC utilis\u00e9 :</p>\n<ul>\n<li>Sur une Raspberry Pi, le port est g\u00e9n\u00e9ralement <code>/dev/ttyAMA0</code> ou <code>/dev/ttyS0</code></li>\n<li>Sur un PC, le port est g\u00e9n\u00e9ralement <code>/dev/ttyUSB0</code></li>\n</ul>\n<p>Si ce n'est pas le cas, <code>lsusb</code> permet de lister tous les appareils USB connect\u00e9s au PC. Il est aussi possible que le module XBee soit mal configur\u00e9, dans ce cas, il faut utiliser <a href=\"https://www.digi.com/products/embedded-systems/digi-xbee/digi-xbee-tools/xctu\">XCTU</a> pour le r\u00e9initialiser ou appuyer sur le bouton reset de l'adaptateur USB.</p>\n<p>En interne, le port s\u00e9rie est ouver avec <code>seriallib::openDevice</code> et utilise les param\u00e8tres suivants (configuration par d\u00e9faut des modules XBee) :</p>\n<ul>\n<li>Baudrate : <code>9600</code></li>\n<li>Parit\u00e9 : <code>SERIAL_PARITY_NONE</code></li>\n<li>Nombre de bits : <code>SERIAL_DATABITS_8</code></li>\n<li>Nombre de stop bits : <code>SERIAL_STOPBITS_1</code></li>\n</ul>\n<h3>Configuration AT</h3>\n<p>Le mode AT permet de lire et modifier les param\u00e8tres d'un module XBee.\nC'est la fonction <code>XBee::checkATConfig</code> qui s'occupe de v\u00e9rifier la configuration du module :</p>\n<ul>\n<li>Tout d'abord, elle entre en mode AT en envoyant <code>+++</code> sur le port s\u00e9rie (<code>XBee::enterATMode</code>)</li>\n<li>Ensuite, elle v\u00e9rifie chaque param\u00e8tre et le modifie si n\u00e9cessaire, par exemple, le baudrate :</li>\n</ul>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"c1\">// Avec XB_AT_M_GET, la valeur du param\u00e8tre est lue et compar\u00e9e au second argument</span>\n<span class=\"c1\">// Avec XB_AT_M_SET, la valeur du param\u00e8tre est modifi\u00e9e pour correspondre au second argument</span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">sendATCommand</span><span class=\"p\">(</span><span class=\"n\">XB_AT_CMD_BAUDRATE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_AT_V_BAUDRATE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_AT_M_GET</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"n\">logger</span><span class=\"p\">(</span><span class=\"n\">INFO</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;Vaudrate v\u00e9rifi\u00e9 avec succ\u00e8s&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">sendATCommand</span><span class=\"p\">(</span><span class=\"n\">XB_AT_CMD_BAUDRATE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_AT_V_BAUDRATE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">XB_AT_M_SET</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"n\">logger</span><span class=\"p\">(</span><span class=\"n\">INFO</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;Baudrate configur\u00e9 avec succ\u00e8s&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">logger</span><span class=\"p\">(</span><span class=\"n\">CRITICAL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;Impossible de configurer le baudrate&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">XB_E_AT_BAUDRATE</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<ul>\n<li>On appelle <code>XBee::writeATConfig</code> pour valider les changements</li>\n<li>Enfin, on sort du mode AT en envoyant <code>ATCN</code> sur le port s\u00e9rie (<code>XBee::exitATMode</code>)</li>\n</ul>"
}