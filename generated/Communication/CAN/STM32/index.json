{
    "hidden": "false",
    "title": "Librairie STM32",
    "description": "Utiliser la librairie CAN pour STM32",
    "order": "3",
    "uri": "Communication/CAN/STM32",
    "page_content": "<p>Pour importer la librairie CAN dans un projet STM32, il faut :</p>\n<ul>\n<li>Depuis la racine du projet : <code>git clone https://github.com/RobotechNancy/CAN-L432KC.git</code></li>\n<li>Suivre <a href=\"https://www.youtube.com/watch?v=MUZj4YwKVac\">cette d\u00e9marche</a>, qui se r\u00e9sume \u00e0<ul>\n<li>Aller dans <code>Project &gt; Properties &gt; C/C++ General &gt; Paths and Symbols</code></li>\n<li>Ajouter le dossier <code>CAN-L432KC/Inc</code> dans l'onglet <code>Include</code></li>\n<li>Ajouter le dossier <code>CAN-L432KC</code> dans l'onglet <code>Source Location</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p class=\"quote quote-TIP\">Pour mettre \u00e0 jour la librairie, <code>git pull</code> dans le dossier clon\u00e9.</p>\n</blockquote>\n<h3>Configuration du bus</h3>\n<p>La configuration du bus se fait dans le fichier <code>ioc</code> du projet STM32 :</p>\n<ul>\n<li>Ouvrir le fichier <code>ioc</code> du projet STM32</li>\n<li>Dans l'onglet <code>Pinout &amp; Configuration</code>, s\u00e9lectionner <code>CAN1</code> dans <code>Connectivity</code></li>\n<li>Cocher <code>Activated</code> dans <code>CAN1 Mode and Configuration</code></li>\n<li>Cocher toutes les interruptions dans <code>NVIC Settings</code>\n<img alt=\"Screenshot IOC\" src=\"/static/images/CAN/IOC.webp\" /></li>\n</ul>\n<p>Les pins <code>CAN1_RX</code> et <code>CAN1_TX</code> sont configur\u00e9es automatiquement (ici, <code>PA11</code> et <code>PA12</code>).\nPour le baudrate, il est automatiquement calcul\u00e9 en fonction des param\u00e8tres dans <code>Bit Timings Parameters</code>.</p>\n<h3>Initialisation</h3>\n<p>La fonction <code>CAN_START</code> permet d'attribuer une adresse et d'initialiser le bus CAN :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"cm\">/* USER CODE BEGIN 2 */</span>\n<span class=\"n\">CAN_START</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">hcan1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CAN_ADDR_ODOMETRIE</span><span class=\"p\">);</span>\n<span class=\"cm\">/* USER CODE END 2 */</span>\n</code></pre></div>\n\n<blockquote>\n<p class=\"quote quote-WARNING\">Il faut placer cette fonction dans le main avant la boucle infinie et dans\nune section <code>USER CODE</code> pour ne pas qu'elle soit \u00e9cras\u00e9e lors de la g\u00e9n\u00e9ration</p>\n</blockquote>\n<h3>Envoyer des donn\u00e9es</h3>\n<p>La fonction <code>CAN_SEND</code> permet d'envoyer des donn\u00e9es sur le bus CAN, par exemple :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mh\">0x01</span><span class=\"w\"> </span><span class=\"p\">};</span>\n\n<span class=\"n\">HAL_StatusTypeDef</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CAN_SEND</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"n\">hcan1</span><span class=\"p\">,</span><span class=\"w\">                  </span><span class=\"c1\">// Structure cr\u00e9\u00e9e par CubeMX pour g\u00e9rer le bus CAN</span>\n<span class=\"w\">    </span><span class=\"n\">CAN_ADDR_RASPBERRY</span><span class=\"p\">,</span><span class=\"w\">      </span><span class=\"c1\">// Adresse du destinataire</span>\n<span class=\"w\">    </span><span class=\"n\">FCT_ACCUSER_RECEPTION</span><span class=\"p\">,</span><span class=\"w\">   </span><span class=\"c1\">// Fonction \u00e0 appeler sur le destinataire</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\">                       </span><span class=\"c1\">// Identifiant de la trame applicative</span>\n<span class=\"w\">    </span><span class=\"nb\">false</span><span class=\"p\">,</span><span class=\"w\">                   </span><span class=\"c1\">// Demande =&gt; false</span>\n<span class=\"w\">    </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\">                    </span><span class=\"c1\">// Donn\u00e9es \u00e0 envoyer </span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"w\">                        </span><span class=\"c1\">// Taille des donn\u00e9es</span>\n<span class=\"p\">);</span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">HAL_OK</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Erreur dans l&#39;envoi</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3>Recevoir des donn\u00e9es</h3>\n<p>Pour recevoir des donn\u00e9es, il faut cr\u00e9er la fonction <code>HAL_CAN_RxFifo0MsgPendingCallback</code> qui sera automatiquement appel\u00e9e \u00e0 chaque trame re\u00e7ue\net utiliser <code>CAN_RECEIVE</code> pour r\u00e9cup\u00e9rer les donn\u00e9es :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">HAL_CAN_RxFifo0MsgPendingCallback</span><span class=\"p\">(</span><span class=\"n\">CAN_HandleTypeDef</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">hcan</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">can_frame_t</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">CAN_RECEIVE</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">hcan1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">frame</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">HAL_OK</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// Erreur dans la r\u00e9ception</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Utiliser frame</span>\n<span class=\"p\">}</span>\n</code></pre></div>"
}