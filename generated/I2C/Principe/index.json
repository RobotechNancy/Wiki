{
    "hidden": "false",
    "title": "Principe",
    "description": "Principe de fonctionnement du bus I2C",
    "order": "1",
    "uri": "I2C/Principe",
    "page_content": "<p>Un bus I2C est un moyen de communication, souvent utilis\u00e9 pour connecter des composants (\u00e9crans, capteurs, ...) \u00e0 une carte \u00e9lectronique.\nC'est un bus avec une architecture ma\u00eetre-esclave mais il est possible d'avoir plusieurs ma\u00eetres et plusieurs esclaves sur le m\u00eame bus :\n<img alt=\"I2C\" loading=\"lazy\" src=\"/static/images/I2C/schema.webp\" /></p>\n<blockquote>\n<p>Le choix du baudrate est plus limit\u00e9 que pour un bus CAN (100kHz, 400kHz ou 3,4MHz), le plus souvent 100kHz.</p>\n</blockquote>\n<h3>Lecture et \u00e9criture</h3>\n<p>Une s\u00e9quence de lecture ou d'\u00e9criture est compos\u00e9e de 3 parties : l'adresse (jusqu'\u00e0 128 n\u0153uds), la demande (lecture ou \u00e9criture) et les donn\u00e9es\n(s\u00e9par\u00e9es par des ACK) :\n<img alt=\"S\u00e9quence I2C\" loading=\"lazy\" src=\"/static/images/I2C/sequence.webp\" /></p>\n<p>Le premier octet de donn\u00e9es correspond souvent au registre \u00e0 lire ou \u00e9crire.\nPlus g\u00e9n\u00e9ralement, les adresses, regitres et valeurs accept\u00e9es sont d\u00e9crits dans la datasheet du composant.</p>\n<h3>Conflits</h3>\n<p>Il existe plusieurs types de conflits sur un bus I2C qu'il faut savoir prendre en compte.</p>\n<p>Tout d'abord, les n\u0153uds sont en collecteur ouvert : ils peuvent uniquement tirer la tension vers le bas.\nOn utilise donc des r\u00e9sistances de pull-up pour garantir la bonne tension au niveau haut :\n<img alt=\"Pull-up\" loading=\"lazy\" src=\"/static/images/I2C/pull-up.webp\" /></p>\n<p>Ensuite, il est possible que plusieurs ma\u00eetres acc\u00e8dent au bus en m\u00eame temps.\nDans ce cas, chaque ma\u00eetre doit s'assurer que le bus est libre avant d'envoyer une s\u00e9quence (condition d'arr\u00eat depuis plus de 4,7\u00b5s).</p>\n<p>Enfin, il est possible que des esclaves aient la m\u00eame adresse par d\u00e9faut.\nSi c'est le cas, il faut les alimenter un par un pour changer leur adresse (voir la datasheet du composant).</p>"
}