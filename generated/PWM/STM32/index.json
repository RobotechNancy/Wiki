{
    "hidden": "false",
    "title": "STM32",
    "description": "Comment g\u00e9n\u00e9rer un signal PWM sur un microcontr\u00f4leur STM32",
    "order": "1",
    "uri": "PWM/STM32",
    "page_content": "<p>Le PWM (Pulse Width Modulation) consiste \u00e0 moduler la largeur d'une impulsion pour contr\u00f4ler la puissance moyenne d\u00e9livr\u00e9e \u00e0 un composant.\nC'est un signal carr\u00e9 dont le rapport cyclique (temps haut / temps total) est variable :\n<img alt=\"PWM\" src=\"http://127.0.0.1:8000/static/images/pwm/signals.webp\" /></p>\n<p>Deux param\u00e8tres sont \u00e0 prendre en compte :</p>\n<ul>\n<li>La fr\u00e9quence du signal : elle est fixe et d\u00e9pend du composant (ex : 50Hz pour un servo-moteur analogique)</li>\n<li>Le temps haut du signal : il est variable et fixe le rapport pour chaque cycle</li>\n</ul>\n<h3>Param\u00e9trage de la carte</h3>\n<p>Avant de r\u00e9gler le timer, il faut configurer la clock que va utiliser le timer (menu <code>Clock Configuration</code>).\nIci, on utilise le timer <code>TIM1</code> qui est sur le bus <code>APB2</code> et qui a une fr\u00e9quence de 4MHz :\n<img alt=\"Prescaler clock\" loading=\"lazy\" src=\"http://127.0.0.1:8000/static/images/pwm/clock_config.webp\" /></p>\n<blockquote>\n<p class=\"quote quote-TIP\">Pour trouver quelle clock le timer utilise, il faut regarder la <a href=\"https://www.st.com/resource/en/datasheet/stm32l432kc.pdf\">datasheet</a> du microcontr\u00f4leur, dans la section  <code>Memory mapping</code> (ici, page 60).</p>\n</blockquote>\n<p>Ensuite, on peut r\u00e9gler le timer TIM1 qu'on utilisera pour g\u00e9n\u00e9rer le signal PWM.\nIci, l'objectif \u00e9tait d'avoir trois signaux, d'o\u00f9 le mode PWM sur 3 channels :\n<img alt=\"TIM1\" loading=\"lazy\" src=\"http://127.0.0.1:8000/static/images/pwm/timer_config.webp\" /></p>\n<p>Il est aussi n\u00e9cessaire de calculer la valeur du prescaler \u00e0 partir de la clock (4MHz), \ndu compteur utilis\u00e9 (4096) et de la fr\u00e9quence voulue (50Hz) : <code>4MHz \u00f7 (4096*50Hz) - 1 = 18</code>.</p>\n<h3>G\u00e9n\u00e9ration du signal</h3>\n<p>Pour commencer la g\u00e9n\u00e9ration du signal, il faut utiliser la fonction <code>HAL_TIM_PWM_Start</code> :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"c1\">// htim1 et TIM_CHANNEL_X sont automatiquement g\u00e9n\u00e9r\u00e9s par CubeMX</span>\n<span class=\"n\">HAL_TIM_PWM_Start</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">htim1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TIM_CHANNEL_1</span><span class=\"p\">);</span>\n<span class=\"n\">HAL_TIM_PWM_Start</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">htim1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TIM_CHANNEL_2</span><span class=\"p\">);</span>\n<span class=\"n\">HAL_TIM_PWM_Start</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">htim1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TIM_CHANNEL_3</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p>Maintenant que le signal est g\u00e9n\u00e9r\u00e9, il est possible de modifier le compte de chaque channel :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"n\">htim1</span><span class=\"p\">.</span><span class=\"n\">Instance</span><span class=\"o\">-&gt;</span><span class=\"n\">CCR1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">205</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Channel 1</span>\n<span class=\"n\">htim1</span><span class=\"p\">.</span><span class=\"n\">Instance</span><span class=\"o\">-&gt;</span><span class=\"n\">CCR2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">410</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Channel 2</span>\n<span class=\"n\">htim1</span><span class=\"p\">.</span><span class=\"n\">Instance</span><span class=\"o\">-&gt;</span><span class=\"n\">CCR3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">615</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Channel 3</span>\n</code></pre></div>\n\n<p>Enfin, pour arr\u00eater la g\u00e9n\u00e9ration du signal, il faut utiliser la fonction <code>HAL_TIM_PWM_Stop</code> :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"n\">HAL_TIM_PWM_Stop</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">htim1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TIM_CHANNEL_1</span><span class=\"p\">);</span>\n<span class=\"n\">HAL_TIM_PWM_Stop</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">htim1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TIM_CHANNEL_2</span><span class=\"p\">);</span>\n<span class=\"n\">HAL_TIM_PWM_Stop</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">htim1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TIM_CHANNEL_3</span><span class=\"p\">);</span>\n</code></pre></div>"
}