{
    "hidden": "false",
    "title": "Initialisation",
    "description": "Impl\u00e9mentation de l'initialisation du bus CAN",
    "order": "2",
    "uri": "CAN/Implementation/Librairie",
    "page_content": "<h3>C\u00f4t\u00e9 STM32</h3>\n<p>C\u00f4t\u00e9 STM32, l'initialisation est tr\u00e8s simple :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"c1\">// D\u00e9marrer le p\u00e9riph\u00e9rique CAN</span>\n<span class=\"n\">HAL_CAN_Start</span><span class=\"p\">(</span><span class=\"n\">hcan</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Activer le mode interruption</span>\n<span class=\"n\">HAL_CAN_ActivateNotification</span><span class=\"p\">(</span><span class=\"n\">hcan</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CAN_IT_RX_FIFO0_MSG_PENDING</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p>Gr\u00e2ce \u00e0 la seconde fonction, on indique quelle interruption doit \u00eatre utilis\u00e9e lorsqu'un message est re\u00e7u.\nIci on utilise <code>CAN_IT_RX_FIFO0_MSG_PENDING</code> qui permet d'ex\u00e9cuter <code>HAL_CAN_RxFifo0MsgPendingCallback</code> lorsque le <code>FIFO0</code> (queue) re\u00e7oit un message.</p>\n<h3>C\u00f4t\u00e9 Raspberry</h3>\n<p>Les librairies standard Linux sont utilis\u00e9es pour communiquer avec le bus CAN. D'abord, on ouvre un socket :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"c1\">// PF = Protocol Family</span>\n<span class=\"n\">socket</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"n\">socket</span><span class=\"p\">(</span><span class=\"n\">PF_CAN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SOCK_RAW</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CAN_RAW</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Ouverture du socket en mode non-bloquant</span>\n<span class=\"n\">fcntl</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F_SETFL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_NONBLOCK</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p>Ensuite, on v\u00e9rifie que l'interface est pr\u00eate \u00e0 \u00eatre utilis\u00e9e :</p>\n<ul>\n<li>On cr\u00e9e une structure <code>ifreq</code> et on lui attribue le nom de l'interface</li>\n</ul>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"n\">ifreq</span><span class=\"w\"> </span><span class=\"n\">ifr</span><span class=\"p\">{};</span><span class=\"w\">                          </span><span class=\"c1\">// ifreq = interface request</span>\n<span class=\"n\">strcpy</span><span class=\"p\">(</span><span class=\"n\">ifr</span><span class=\"p\">.</span><span class=\"n\">ifr_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CAN_INTERFACE</span><span class=\"p\">);</span><span class=\"w\">  </span><span class=\"c1\">// CAN_INTERFACE = &quot;can0&quot; ou &quot;vcan0&quot;</span>\n</code></pre></div>\n\n<ul>\n<li>On v\u00e9rifie que l'interface est up</li>\n</ul>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"n\">ioctl</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SIOCGIFFLAGS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">ifr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Impossible de r\u00e9cup\u00e9rer les flags de l&#39;interface</span>\n<span class=\"w\">    </span><span class=\"c1\">// donc l&#39;interface est introuvable</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">ifr</span><span class=\"p\">.</span><span class=\"n\">ifr_flags</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">IFF_UP</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// L&#39;interface n&#39;est pas up</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<ul>\n<li>Pour lier l'interface au bus CAN, il faut retrouver l'index de l'interface</li>\n</ul>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"n\">ioctl</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SIOCGIFINDEX</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">ifr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Impossible de r\u00e9cup\u00e9rer l&#39;index de l&#39;interface</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>Maintenant que l'interface est pr\u00eate, on peut la lier au socket :</p>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"n\">sockaddr_can</span><span class=\"w\"> </span><span class=\"n\">addr</span><span class=\"p\">{};</span>\n<span class=\"n\">addr</span><span class=\"p\">.</span><span class=\"n\">can_family</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">AF_CAN</span><span class=\"p\">;</span>\n<span class=\"n\">addr</span><span class=\"p\">.</span><span class=\"n\">can_ifindex</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ifr</span><span class=\"p\">.</span><span class=\"n\">ifr_ifindex</span><span class=\"p\">;</span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">sockaddr</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">addr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">addr</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Impossible de lier l&#39;interface au socket</span>\n<span class=\"p\">}</span>\n</code></pre></div>"
}