{
    "hidden": "false",
    "title": "Marqueurs ArUCO",
    "description": "Documentation sur les marqueurs ArUCO",
    "order": "1",
    "uri": "Odometrie/ArUCO",
    "page_content": "<p>Des tags ArUCO (en rouge) sont plac\u00e9s sur le plateau et les \u00e9l\u00e9ments de jeu. Pour situer ces tags, des modules sont plac\u00e9s sur des balises (en bleu ou jaune) :\n<img alt=\"Terrain de jeu\" loading=\"lazy\" src=\"http://127.0.0.1:8000/static/images/aruco/playground.webp\" /></p>\n<p>Chaque balise est mont\u00e9e d'un module contenant :</p>\n<ul>\n<li>Une cam\u00e9ra</li>\n<li>Un module <a href=\"http://127.0.0.1:8000/communication/XBee/principe\">XBee</a> (S1 Pro)</li>\n<li>Une batterie LiFePO4</li>\n<li>Un Raspberry Pi Zero (<a href=\"https://opencv.org/\">OpenCV</a> et <a href=\"https://github.com/opencv/opencv_contrib\">OpenCV contrib</a>)</li>\n</ul>\n<h3>Installation</h3>\n<p>Pour utiliser la <a href=\"https://github.com/RobotechNancy/Odometrie/tree/master/ArUCO\">librairie ArUCO</a>, il faut installer :</p>\n<ul>\n<li>La librairie custom <a href=\"http://127.0.0.1:8000/XBee/Librairie\">XBee</a></li>\n<li>La librairie OpenCV avec OpenCV contrib :</li>\n</ul>\n<div class=\"codehilite\"><pre tabindex='0'><span></span><code><span class=\"c1\"># svn (subversion) permet de ne t\u00e9l\u00e9charger que les modules opencv n\u00e9cessaires</span>\nsudo<span class=\"w\"> </span>apt<span class=\"w\"> </span>install<span class=\"w\"> </span>subversion<span class=\"w\"> </span>libapache2-mod-svn<span class=\"w\"> </span>cmake\n\ngit<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/opencv/opencv.git\nmkdir<span class=\"w\"> </span>opencv/build<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"nb\">cd</span><span class=\"w\"> </span>opencv/build<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>mkdir<span class=\"w\"> </span>modules\n\nsvn<span class=\"w\"> </span><span class=\"nb\">export</span><span class=\"w\"> </span>https://github.com/opencv/opencv_contrib/trunk/modules/aruco\nmv<span class=\"w\"> </span>aruco<span class=\"w\"> </span>modules\n\ncmake<span class=\"w\"> </span>-DOPENCV_EXTRA_MODULES_PATH<span class=\"o\">=</span>./modules<span class=\"w\"> </span>..\nsudo<span class=\"w\"> </span>make<span class=\"w\"> </span>install<span class=\"w\"> </span>-j<span class=\"k\">$(</span>nproc<span class=\"k\">)</span>\n</code></pre></div>\n\n<blockquote>\n<p class=\"quote quote-WARNING\">Le processus d'installation peut prendre plusieures heures sur une Raspberry Pi.\nIl est aussi possible de cross-compiler OpenCV (non test\u00e9).</p>\n</blockquote>\n<h3>Calibration</h3>\n<p>Pour avoir une meilleure d\u00e9tection, il est n\u00e9cessaire de calibrer la cam\u00e9ra :</p>\n<ul>\n<li>D\u00e9finir les param\u00e8tres dans <code>data/config.yml</code></li>\n<li>G\u00e9n\u00e9rer une grille ArUCO avec <code>./ArUCO board</code></li>\n<li>D\u00e9marrer la calibration avec <code>./ArUCO calibrate</code></li>\n<li>Prendre plusieurs point de vue avec <code>c</code></li>\n<li>Calculer les param\u00e8tres en appuyant <code>ECHAP</code></li>\n</ul>\n<p>Si tout s'est bien pass\u00e9, un fichier <code>data/camera_params.yml</code> a \u00e9t\u00e9 cr\u00e9\u00e9 contenant les param\u00e8tres de la cam\u00e9ra (matrice de projection, distorsion, etc...).</p>\n<h3>Utilisation</h3>\n<p><code>./ArUCO estimate</code> permet de lancer le script de d\u00e9tection et d'estimation de la position des tags ArUCO.\nLes param\u00e8tres sont repris de <code>data/camera_params.yml</code> et <code>data/config.yml</code> et les positions sont donn\u00e9es par rapport \u00e0 un tag de r\u00e9f\u00e9rence (<code>ref_marker_id</code>).</p>\n<p style=\"text-align: center\"><img alt=\"ArUCO Estimation\" loading=\"lazy\" src=\"http://127.0.0.1:8000/static/images/aruco/estimation.webp\" style=\"display: inline-block;\" />\n<img alt=\"ArUCO AR\" loading=\"lazy\" src=\"http://127.0.0.1:8000/static/images/aruco/AR.webp\" style=\"display: inline-block;\" /></p>"
}